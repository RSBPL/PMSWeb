
@model MVCApp.Models.AddController
<style>
    #divLoader {
        position: fixed;
        top: 0px;
        right: 0px;
        width: 100%;
        height: 100%;
        background-color: #fff;
        background-image: @Url.Content("~/Image/Loader.gif");
        background-repeat: no-repeat;
        background-position: center;
        z-index: 10000000;
        opacity: 0.4;
        filter: alpha(opacity=40); /* For IE8 and earlier */
    }
</style>
<div id="divLoader" style="display:none;">
    <img src="@Url.Content("~/Image/Loader.gif")" alt="Loader" style="margin-top:15%; margin-left:50%" />
</div>
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Index", "Home")">Home</a>
        </li>
        <li>
            <a href="#">Add Controller Master</a>
        </li>
    </ul>
</div>
<div class="page-content">
    <div class="container" style="width:100%!important">
        <div id="alert"></div>
    </div>
    @*--------Form------------*@
    <div class="container" style="width:100%!important">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal form-group">
                <fieldset class="the-fieldset bg-info">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="Plant" class="text-right control-label col-form-label"><strong>Plant</strong></label>
                            @Html.DropDownListFor(model => model.Plant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Plant, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Family" class="text-right control-label col-form-label"><strong>Family</strong></label>

                            @Html.DropDownListFor(model => model.Family, Enumerable.Empty<SelectListItem>(), "----Select----", new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="ID" class="text-right control-label col-form-label"><strong>ID</strong></label>
                            @Html.DropDownListFor(model => model.ID, Enumerable.Range(0, 51).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { placeholder = Html.DisplayNameFor(x => x.ID), @class = "form-control" })
                            <strong>@Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Stage" class="text-right control-label col-form-label"><strong>Stage</strong></label>

                            @Html.DropDownListFor(model => model.Stage, Enumerable.Empty<SelectListItem>(), "----Select----", new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Mode" class="text-right control-label col-form-label"><strong>Mode</strong></label>
                            @Html.DropDownList("Mode", new List<SelectListItem>

                                   {
                                       new SelectListItem{ Text = "INPUT",Value="INPUT" },
                                       new SelectListItem{ Text = "OUTPUT",Value="OUTPUT"}
                                   })
                        </div>
                        <div class="col-md-3">
                            <label for="ReadingChannel" class="text-right control-label col-form-label"><strong>Reading Channel</strong></label>
                            @Html.DropDownList("ReadingChannel", new List<SelectListItem>

                                   {
                           new SelectListItem{ Text = " ",Value=" " },
                                       new SelectListItem{ Text = "232",Value="232" },
                                       new SelectListItem{ Text = "485",Value="485"},
                                       new SelectListItem{ Text = "DI",Value="DI"},
                                       new SelectListItem{ Text = "RT1",Value="RT1"},
                                       new SelectListItem{ Text = "RT2",Value="RT2"},
                                       new SelectListItem{ Text = "FT1",Value="FT1"},
                                       new SelectListItem{ Text = "FT2",Value="FT2"}
                                   })
                        </div>
                        <div class="col-md-3">
                            <label for="IPAddress" class="text-right control-label col-form-label"><strong>IP Address</strong></label>
                            @Html.TextBoxFor(Model => Model.IPAddress, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                            <strong>@Html.ValidationMessageFor(model => model.IPAddress, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Port" class="text-right control-label col-form-label"><strong>Port</strong></label>
                            @Html.TextBoxFor(Model => Model.Port, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                            <strong>@Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Remarks" class="text-right control-label col-form-label"><strong>Remarks</strong></label>
                            @Html.TextBoxFor(Model => Model.Remarks, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                            <strong>@Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="IsActive" class="text-right control-label col-form-label"><strong>Is Active?</strong></label>
                            <div class="form-check">
                                @Html.CheckBoxFor(Model => Model.IsActive, new { @class = "largerCheckbox", @checked = "checked" })
                            </div></div>
                        

                        <div class="col-md-1" style="padding-top: 23px;">
                            <button class="btn btn-success btn-sm" type="button" id="Add"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save</strong></button>
                            <button class="btn btn-success btn-sm" type="button" id="Update"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Update</strong></button>
                        </div>
                        <div class="col-md-1" style="padding-top: 23px;">
                            <button class="btn btn-default btn-sm" type="button" id="Clear"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>Clear</strong></button>
                        </div>
                    </div>
                </fieldset>
            </div>
        }
        <div id="Grid"></div>
    </div>
</div>

<script src="@Url.Content("~/assets/js/jquery-2.1.4.min.js")"></script>
<script src="@Url.Content("~/Scripts/ej2/ej2.min.js")"></script>
<link href="@Url.Content("~/Content/select2/dist/css/select2.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/select2/dist/js/select2.min.js")"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    $(document).ready(function () {
        BindPlant();
        $("#Update").hide();
    });

    $("#Plant").on("change", function () {
        BindFamily();
    });
    $("#Family").on("change", function () {
        BindGrid();
    });

    $("#Clear").on("click", function () {
        location.reload(true);
    });

    $('#Mode,#ReadingChannel').on('change keyup', function () {
        var selected = $('#Mode').val();
        var date = $('#ReadingChannel').val();
        if (selected == 'OUTPUT') {
            $('#ReadingChannel').prop("disabled", true);
        }
        else {
            $('#ReadingChannel').prop("disabled", false);
        }
    });

    //Function to Bind Plant
    function BindPlant() {
        $.ajax({
            url: '@Url.Action("BindPlant", "AddController")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#Plant").html(result);
                BindFamily();
                BindStage();
            },
            error: function (ErrorMassage) {
            }
        });
    };

    //Function to Bind Family
    function BindFamily() {
        var selectedValue = $("#Plant").val();
        $.ajax({
            url: '@Url.Action("BindFamily", "AddController")',
            data: JSON.stringify({ Plant: selectedValue}),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#Family").html(null);
                $("#Family").html(result);
                BindGrid();
            },
            error: function (ErrorMassage) {

            }
        });
    };

    //Function to Bind Stage
    function BindStage() {
        $.ajax({
            url: '@Url.Action("BindStage", "AddController")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#Stage").html(null);
                $("#Stage").html(result);
            },
            error: function (ErrorMassage) {

            }

        });
    };

     // Bind Grid
     function BindGrid() {
        $("#divLoader").show();
        var Data = {
            Plant: $('#Plant').val(),
            Family: $('#Family').val()
         };
        $.ajax({
            url: '@Url.Action("Grid", "AddController")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#Grid").html(result);
                $("#divLoader").hide();
            },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    // Save Data
    $("#Add").on("click", function () {

        $("#divLoader").show();
        if ($("#IsActive").prop('checked') == true) {
            chkbox = true;
        }
        else {
            chkbox = false;
        }
            var data = {
                Plant: $('#Plant').val(),
                Family: $('#Family').val(),
                ID: $('#ID').val(),
               // DesCription: $('#ItemCode option:selected').text(),
                Stage: $("#Stage").val(),
                Mode: $("#Mode").val(),
                ReadingChannel: $("#ReadingChannel").val(),
                IPAddress: $("#IPAddress").val(),
                Port: $("#Port").val(),
                Remarks: $("#Remarks").val(),
                IsActive: chkbox
            };
            $.ajax({
                url: '@Url.Action("Save", "AddController")',
                data: JSON.stringify(data),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#divLoader").hide();

                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () { $(".alert").alert('close'); }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () { $(".alert").alert('close'); }, 5000);
                        $("#IPAddress").val("");
                        $("#Port").val("");
                        $("#Remarks").val("");
                        BindGrid();
                    }

                },
                error: function (errormessage) {

                }
            });

    });



    // Update Data
       @*$("#Update").on("click", function () {
           $("#divLoader").show();
           if ($("#IsActive").prop('checked') == true) {
               chkbox = true;
           }
           else {
               chkbox = false;
           }
           var data = {
              AutoId: AutoId,
              Plant: $('#Plant').val(),
              Family: $('#Family').val(),
              ID: $('#ID').val(),
              // DesCription: $('#ItemCode option:selected').text(),
              Stage: $("#Stage").val(),
              Mode: $("#Mode").val(),
              ReadingChannel: $("#ReadingChannel").val(),
              IPAddress: $("#IPAddress").val(),
              Port: $("#Port").val(),
              Remarks: $("#Remarks").val(),
              IsActive: chkbox
            };
        $.ajax({
            url: '@Url.Action("Update", "AddController")',
            data: JSON.stringify(data),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#divLoader").hide();

                if (data.validation.includes("error")) {
                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () { $(".alert").alert('close'); }, 5000);
                }

                else {
                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () { $(".alert").alert('close'); }, 5000);
                    $("#Plant").prop('disabled', false);
                    $("#Family").prop('disabled', false);
                    $("#IPAddress").val("");
                    $("#Port").val("");
                    $("#Remarks").val("");

                    $('#Add').show();
                    $('#Update').hide();
                    BindGrid();
                }
            },
            error: function (errormessage)
            {
            }
        });
       });*@


    $("#Plant").select2({
        allowclear: true,
        width: '100%',
    });
    $("#Family").select2({
        allowclear: true,
        width: '100%',
    });
    $("#ID").select2({
        allowclear: true,
        width: '100%',
    });
    $("#Mode").select2({
        allowclear: true,
        width: '100%',
    });
    $("#Stage").select2({
        allowclear: true,
        width: '100%',
    });
    $("#ReadingChannel").select2({
        allowclear: true,
        width: '100%',
    });
</script>