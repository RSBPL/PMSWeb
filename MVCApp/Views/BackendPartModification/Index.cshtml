
@model MVCApp.Models.BackendModification
<style>
    #divLoader {
        position: fixed;
        top: 0px;
        right: 0px;
        width: 100%;
        height: 100%;
        background-color: #fff;
        background-image: @Url.Content("~/Image/Loader.gif");
        background-repeat: no-repeat;
        background-position: center;
        z-index: 10000000;
        opacity: 0.4;
        filter: alpha(opacity=40); /* For IE8 and earlier */
    }
    .the-legend {
        box-shadow: 0px 1px 5px #7f8b8f;
    }

    ol, ul {
        margin: 5px 0px 1px 1px;
    }

    .tab-content {
        padding: 6px 0px 0px 0px;
    }
    .m-50 {
        width: 73%;
        MARGIN: 0 0 0 130px
    }
    .newinputwidth {
        MIN-WIDTH: 130px !important;
        MAX-HEIGHT: 30px !important;
    }

</style>


<div id="divLoader" style="display:none;">
    <img src="@Url.Content("~/Image/Loader.gif")" alt="Loader" style="margin-top:10%; margin-left:38%" />
</div>
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Index", "Home")">Home</a>
        </li>
        <li>
            <a href="#">Backend Assembly - Parts Modification</a>
        </li>
    </ul>
</div>
<div class="page-content">
    <div class="container" style="width:100%!important">
        <div id="alert"></div>
    </div>
    <ul class="nav nav-pills">
        <li class="bg-light active"><a data-toggle="tab" href="#Menu1">New</a></li>
        <li class="bg-light"><a data-toggle="tab" href="#Menu2">Reprint</a></li>
        <li class="bg-light"><a data-toggle="tab" href="#Menu3">Part Modification</a></li>
    </ul>
    @*--------Form------------*@
    <div class="tab-content">
        <div id="Menu1" class="tab-pane fade in active">
            <div class="container" style="width:100%!important">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal form-group ">
                        <fieldset class="the-fieldset bg-info">
                            <div class="row">
                                <div class="col-md-3">
                                    <label for="Plant" class="text-right control-label col-form-label"><strong>Plant</strong></label>
                                    @Html.DropDownListFor(model => model.Plant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                    <strong>@Html.ValidationMessageFor(model => model.Plant, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-3">
                                    <label for="Family" class="text-right control-label col-form-label"><strong>Family</strong></label>
                                    @Html.DropDownListFor(model => model.Family, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                    <strong>@Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-3">
                                    <label for="Backend" class="text-right control-label col-form-label"><strong>Backend</strong></label>
                                    @Html.DropDownListFor(model => model.Backend, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                    <strong>@Html.ValidationMessageFor(model => model.Backend, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-3">
                                    <label for="JobId" class="text-right control-label col-form-label"><strong>Job</strong></label>
                                    @Html.DropDownListFor(model => model.JobId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                    <strong>@Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-3">
                                    <label for="RearAxleSrno" class="text-right control-label col-form-label"><strong>RearAxle</strong></label>
                                    @Html.TextBoxFor(Model => Model.RearAxleSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                    <strong>@Html.ValidationMessageFor(model => model.RearAxleSrno, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-3">
                                    <label for="TransmissionSrno" class="text-right control-label col-form-label"><strong>Transmission</strong></label>
                                    @Html.TextBoxFor(Model => Model.TransmissionSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                    <strong>@Html.ValidationMessageFor(model => model.TransmissionSrno, "", new { @class = "text-danger" })</strong>
                                </div>
                                <div class="col-md-1" style="padding-top: 23px;">
                                    <button class="btn btn-success btn-sm" type="button" id="Add"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save</strong></button>
                                </div>
                                <div class="col-md-1" style="padding-top: 23px;">
                                    <button class="btn btn-default btn-sm" type="button" id="Clear"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>Clear</strong></button>
                                </div>                                
                            </div>
                        </fieldset>
                    </div>
                }
            </div>
        </div>
        <div id="Menu2" class="tab-pane fade">
            <div class="container" style="width:100%!important">
                <div class="form-horizontal form-group ">
                    <fieldset class="the-fieldset bg-info">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="RPlant" class="text-right control-label col-form-label"><strong>Plant</strong></label>
                                @Html.DropDownListFor(model => model.RPlant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                <strong>@Html.ValidationMessageFor(model => model.RPlant, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="RFamily" class="text-right control-label col-form-label"><strong>Family</strong></label>
                                @Html.DropDownListFor(model => model.RFamily, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                <strong>@Html.ValidationMessageFor(model => model.RFamily, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="RBackend" class="text-right control-label col-form-label"><strong>Backend</strong></label>
                                @Html.TextBoxFor(Model => Model.RBackendSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.RBackendSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="RRearAxleSrno" class="text-right control-label col-form-label"><strong>RearAxle</strong></label>
                                @Html.TextBoxFor(Model => Model.RRearAxleSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.RRearAxleSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="RTransmissionSrno" class="text-right control-label col-form-label"><strong>Transmission</strong></label>
                                @Html.TextBoxFor(Model => Model.RTransmissionSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.RTransmissionSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="RHydraulicSrno" class="text-right control-label col-form-label"><strong>Hydraulic</strong></label>
                                @Html.TextBoxFor(Model => Model.RHydraulicSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.RHydraulicSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-1" style="padding-top: 23px;">
                                <button class="btn btn-success btn-sm" type="button" id="AddReprint"><i class="ace-icon fa fa-print bigger-110"></i><strong>RePrint</strong></button>
                            </div>
                            <div class="col-md-1" style="padding-top: 23px;">
                                <button class="btn btn-default btn-sm" type="button" id="ClearReprint"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>Clear</strong></button>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>

        <div id="Menu3" class="tab-pane fade">
            <div class="container" style="width:100%!important">
                <div class="form-horizontal form-group ">
                    <fieldset class="the-fieldset bg-info">
                        <div class="row">
                            <div class="col-md-3">
                                <label for="MPlant" class="text-right control-label col-form-label"><strong>Plant</strong></label>
                                @Html.DropDownListFor(model => model.MPlant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                <strong>@Html.ValidationMessageFor(model => model.MPlant, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="MFamily" class="text-right control-label col-form-label"><strong>Family</strong></label>
                                @Html.DropDownListFor(model => model.MFamily, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                                <strong>@Html.ValidationMessageFor(model => model.MFamily, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="MBackendSrno" class="text-right control-label col-form-label"><strong>Backend</strong></label>
                                @Html.TextBoxFor(Model => Model.MBackendSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.MBackendSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="MRearAxleSrno" class="text-right control-label col-form-label"><strong>RearAxle</strong></label>
                                @Html.TextBoxFor(Model => Model.MRearAxleSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.MRearAxleSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="MTransmissionSrno" class="text-right control-label col-form-label"><strong>Transmission</strong></label>
                                @Html.TextBoxFor(Model => Model.MTransmissionSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.MTransmissionSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-3">
                                <label for="MHydraulicSrno" class="text-right control-label col-form-label"><strong>Hydraulic</strong></label>
                                @Html.TextBoxFor(Model => Model.MHydraulicSrno, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                <strong>@Html.ValidationMessageFor(model => model.MHydraulicSrno, "", new { @class = "text-danger" })</strong>
                            </div>
                            <div class="col-md-1" style="padding-top: 23px;">
                                <button class="btn btn-success btn-sm" type="button" id="Modify"><i class="ace-icon fa fa-print bigger-110"></i><strong>Modify</strong></button>
                            </div>
                            <div class="col-md-1" style="padding-top: 23px;">
                                <button class="btn btn-default btn-sm" type="button" id="ClearModify"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>Clear</strong></button>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>

    </div>
</div>

<script src="@Url.Content("~/assets/js/jquery-2.1.4.min.js")"></script>
<script src="@Url.Content("~/Scripts/ej2/ej2.min.js")"></script>
<link href="@Url.Content("~/Content/select2/dist/css/select2.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/select2/dist/js/select2.min.js")"></script>


<script>

    $(document).ready(function () {
        DDLPlant();
        DDLReprintPlant();
        DDLModifytPlant();
    });
    $("#Plant").on("change", function () {
        DDLFamilyByPlant();
    });
    $("#Family").on("change", function () {
        DDLBackendbyFamilyPlant();
        /*DDLBindJob();*/
    });
    $("#Backend").on("change", function () {
        DDLBindJob();
    });
    //Function to bind Plant
    function DDLPlant() {
        $.ajax({
            url: '@Url.Action("BindPlant", "BackendPartModification")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#Plant").append(optionhtml);
                });
                DDLFamilyByPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    //Function to bind Family by Plant
    function DDLFamilyByPlant() {
        var selectedValue = $("#Plant").val();
        $.ajax({
            url: '@Url.Action("BindFamily", "BackendPartModification")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify({ Plant: selectedValue }),
            success: function (result) {
                $("#Family").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#Family").append(optionhtml);
                });
                DDLBackendbyFamilyPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    function DDLBackendbyFamilyPlant() {
        var obj = {
            Plant: $("#Plant").val(),
            Family: $("#Family").val(),
            Plandate: $("#Plandate").val()
        }
        $.ajax({
            url: '@Url.Action("BindBackend", "BackendPartModification")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify(obj),
            success: function (result) {
                $("#Backend").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#Backend").append(optionhtml);
                });
                DDLBindJob();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    function DDLBindJob() {
        var obj = {
            dcode: $("#Backend").val(),
        }
        $.ajax({
            url: '@Url.Action("BindJob", "BackendPartModification")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify(obj),
            success: function (result) {
                $("#JobId").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#JobId").append(optionhtml);
                });
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    $("#Add").on("click", function () {
            $("#divLoader").show();
            var data = {
                Plant: $('#Plant').val(),
                Family: $('#Family').val(),
                Backend: $('#Backend').val(),
                JobId: $("#JobId").val(),
                RearAxleSrno: $("#RearAxleSrno").val(),
                TransmissionSrno: $("#TransmissionSrno").val()
            };
            $.ajax({
                url: '@Url.Action("Save", "BackendPartModification")',
                data: JSON.stringify(data),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                        //$('#RearAxleSrno').val("");
                        //$('#TransmissionSrno').val("");
                    }

                },
                error: function (errormessage) {

                }
            });

    });

    $("#Plant").select2({
        allowClear: true,
        width: '315px',
    });
    $("#Family").select2({
        allowClear: true,
        width: '315px',
    });
    $("#Backend").select2({
        allowClear: true,
        width: '315px',
    });
    $("#JobId").select2({
        allowClear: true,
        width: '315px',
    });

    $("#Clear").on("click", function () {
        location.reload(true);
    });
    function closeAlert(alert) {

        $(alert).hide();
    };

    /**************************************reprint********************************************/


    $("#RPlant").on("change", function () {
        DDLReprintFamilyByPlant();
    });
    $("#RBackendSrno").on("change", function () {
        GetSerialNo();
    });

    //Function to bind Plant
    function DDLReprintPlant() {
        $.ajax({
            url: '@Url.Action("BindReprintPlant", "BackendPartModification")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#RPlant").append(optionhtml);
                });
                DDLReprintFamilyByPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    //Function to bind Family by Plant
    function DDLReprintFamilyByPlant() {
        var selectedValue = $("#RPlant").val();
        $.ajax({
            url: '@Url.Action("BindReprinFamily", "BackendPartModification")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify({ RPlant: selectedValue }),
            success: function (result) {
                $("#RFamily").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#RFamily").append(optionhtml);
                });
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    function GetSerialNo() {
            var Data = {
                RBackendSrno: $('#RBackendSrno').val(),
                RPlant: $('#RPlant').val(),
                RFamily: $('#RFamily').val()
            };
        $.ajax({
            url: '@Url.Action("GetSerialNo", "BackendPartModification")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Msg != "") {
                    $('#alert').append('<div class="alert alert-danger role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
                else {

                    if (data.Result.RRearAxleSrno != "" && data.Result.RRearAxleSrno != null) {
                        $("#RRearAxleSrno").val(data.Result.RRearAxleSrno);

                    }
                    if (data.Result.RTransmissionSrno != "" && data.Result.RTransmissionSrno != null) {
                        $("#RTransmissionSrno").val(data.Result.RTransmissionSrno);

                    }
                    if (data.Result.RHydraulicSrno != "" && data.Result.RHydraulicSrno != null) {
                        $("#RHydraulicSrno").val(data.Result.RHydraulicSrno);
                    }
                   /* $('#RBackendSrno').prop('disabled', true);*/
                    $('#RRearAxleSrno').prop('disabled', true);
                    $('#RTransmissionSrno').prop('disabled', true);
                    $('#RHydraulicSrno').prop('disabled', true);
                }

            },
            error: function (errormessage) {

            }
        });

    };

    $("#AddReprint").on("click", function () {
            $("#divLoader").show();
            var data = {
                RPlant: $('#RPlant').val(),
                RFamily: $('#RFamily').val(),
                RBackendSrno: $('#RBackendSrno').val(),
                RRearAxleSrno: $("#RRearAxleSrno").val(),
                RTransmissionSrno: $("#RTransmissionSrno").val(),
                RHydraulicSrno: $("#RHydraulicSrno").val()
            };
            $.ajax({
                url: '@Url.Action("Reprint", "BackendPartModification")',
                data: JSON.stringify(data),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                        //$('#RearAxleSrno').val("");
                        //$('#TransmissionSrno').val("");
                    }

                },
                error: function (errormessage) {

                }
            });

    });

    $("#RPlant").select2({
        allowClear: true,
        width: '315px',
    });
    $("#RFamily").select2({
        allowClear: true,
        width: '315px',
    });
    $("#ClearReprint").on("click", function () {
        location.reload(true);
    });

    /**************************************PartModify********************************************/
    $("#MPlant").on("change", function () {
        DDLModifyFamilyByPlant();
    });
    $("#MBackendSrno").on("change", function () {
        GetModifySerialNo();
    });

    //Function to bind Plant
    function DDLModifytPlant() {
        $.ajax({
            url: '@Url.Action("BindModifyPlant", "BackendPartModification")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#MPlant").append(optionhtml);
                });
                DDLModifyFamilyByPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    //Function to bind Family by Plant
    function DDLModifyFamilyByPlant() {
        var selectedValue = $("#MPlant").val();
        $.ajax({
            url: '@Url.Action("BindModifyFamily", "BackendPartModification")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify({ MPlant: selectedValue }),
            success: function (result) {
                $("#MFamily").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#MFamily").append(optionhtml);
                });
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    function GetModifySerialNo() {
            var Data = {
                MBackendSrno: $('#MBackendSrno').val(),
                MPlant: $('#MPlant').val(),
                MFamily: $('#MFamily').val()
            };
        $.ajax({
            url: '@Url.Action("GetModifySerialNo", "BackendPartModification")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                if (data.Msg != "") {
                    $('#alert').append('<div class="alert alert-danger role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
                else {

                    if (data.Result.MRearAxleSrno != "" && data.Result.MRearAxleSrno != null) {
                        $("#MRearAxleSrno").val(data.Result.MRearAxleSrno);

                    }
                    if (data.Result.MTransmissionSrno != "" && data.Result.MTransmissionSrno != null) {
                        $("#MTransmissionSrno").val(data.Result.MTransmissionSrno);

                    }
                    if (data.Result.MHydraulicSrno != "" && data.Result.MHydraulicSrno != null) {
                        $("#MHydraulicSrno").val(data.Result.MHydraulicSrno);
                    }
                    /*$('#MBackendSrno').prop('disabled', true);*/
                    //$('#MRearAxleSrno').prop('disabled', true);
                    //$('#MTransmissionSrno').prop('disabled', true);
                    //$('#MHydraulicSrno').prop('disabled', true);
                }

            },
            error: function (errormessage) {

            }
        });

    };


    $("#MPlant").select2({
        allowClear: true,
        width: '315px',
    });
    $("#MFamily").select2({
        allowClear: true,
        width: '315px',
    });
    $("#ClearModify").on("click", function () {
        location.reload(true);
    });
</script>



