@model MVCApp.Models.SftSetting
<style>
    #divLoader {
        position: fixed;
        top: 0px;
        right: 0px;
        width: 100%;
        height: 100%;
        background-color: #fff;
        background-image: @Url.Content("~/Image/Loader.gif");
        background-repeat: no-repeat;
        background-position: center;
        z-index: 10000000;
        opacity: 0.4;
        filter: alpha(opacity=40); /* For IE8 and earlier */
    }

    .col3 {
        width: 200px;
    }
    .le {
        font-size: 15px;
        text-align: -webkit-center;
        font-weight: 700;
        background: #d1e9ff;
        border-radius: 5px;
        border: 1px solid #00b0ff;
        margin-bottom: 0;
    }
    .m-top {
        margin-top: 7px;
    }
    .lblStrng {
        font-size: xx-large;
        color: white;
    }

    .bg-light a {
        color: white;
        font-size: medium;
        font-weight: 700;
    }

    .nav > li > a:focus, .nav > li > a:hover {
        background-color: #6fb3e0;
    }

    .nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > li.active > a:hover {
        background-color: #285b74;
    }
</style>
<div id="divLoader" style="display:none;">
    <img src="@Url.Content("~/Image/Loader.gif")" alt="Loader" style="margin-top:10%; margin-left:38%" />
</div>
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Index", "Home")">Home</a>
        </li>
        <li>
            <a href="#">Setting</a>
        </li>
    </ul>
</div>
<div class="page-content">
    <div class="container" style="width:100%!important">
        <div id="alert"></div>
    </div>
    @*--------Form------------*@
    <div class="container" style="width:100%!important">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal form-group">
                <fieldset class="the-fieldset bg-info">
                    <div class="row">
                        <div class="col-md-3 col3">
                            <label for="Plant" class="text-right control-label col-form-label"><strong>Plant</strong></label>
                            @Html.DropDownListFor(model => model.Plant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Plant, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3 ">
                            <label for="Family" class="text-right control-label col-form-label"><strong>Family</strong></label>
                            @Html.DropDownListFor(model => model.Family, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })</strong>
                        </div>


                    </div>
                </fieldset>

                <div class="row">
                    <div class="form-horizontal form-group" style="background: #438eb9; margin-left: 0; margin-right: 0;">
                        <ul class="nav nav-pills" id="myTab">
                            <li class="bg-light active"><a data-toggle="tab" href="#Menu1">Ganeral Setting</a></li>
                            <li class="bg-light"><a data-toggle="tab" href="#Menu2">SMTP SETTING</a></li>
                            <li class="bg-light"><a data-toggle="tab" href="#Menu3">INTEGRATION (Y/N)</a></li>
                            <li class="bg-light"><a data-toggle="tab" href="#Menu4">NOTIFICATION</a></li>
                        </ul>

                        <fieldset class="the-fieldset bg-info">
                            <div class="tab-content">
                                <div id="Menu1" class="tab-pane fade in active">
                                    <div class="row m-top">
                                        <div class="col-md-6">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">Set Mobile App Message Interval</legend>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>Success Interval</strong></label>
                                                        @Html.DropDownListFor(model => model.SuccessIntvl, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>Error Interval</strong></label>
                                                        @Html.DropDownListFor(model => model.ErrorIntvl, Enumerable.Empty<SelectListItem>(), new { @class = "form-control input-sm" })
                                                    </div>



                                                </div>

                                            </fieldset>
                                        </div>
                                        <div class="col-md-6">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">Display Verification Label</legend>
                                                <label for="QtyVeriLbl" class="text-right control-label col-form-label"><strong>Select Printing Option for Quantity Verification</strong></label>
                                                <div class="row">
                                                    <div class="col-md-1" style="width: 6%!important;">
                                                        @Html.CheckBoxFor(model => model.A4Sheet, new { @class = "form-control  input-sm" })
                                                    </div>
                                                    <div class="col-md-3" style="width: 25%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>A-4 Sheet</strong></label>
                                                    </div>
                                                    <div class="col-md-1" style="width: 6%!important;">
                                                        @Html.CheckBoxFor(model => model.Barcode, new { @class = "form-control  input-sm" })
                                                    </div>
                                                    <div class="col-md-3" style="width: 28%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>BarCode</strong></label>
                                                    </div>

                                                    <div class="col-md-1" style="width: 6%!important;">
                                                        @Html.CheckBoxFor(model => model.Quality, new { @class = "form-control  input-sm" })
                                                    </div>
                                                    <div class="col-md-3" style="width: 28%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>Quality</strong></label>
                                                    </div>
                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>

                                    <div class="row m-top">
                                        <div class="col-md-6">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">Kanban Label</legend>
                                                <label for="QtyVeriLbl" class="text-right control-label col-form-label"><strong>Select Printing Option for Kanban</strong></label>
                                                <div class="row">
                                                    <div class="col-md-1" style="width: 7%!important;">
                                                        @Html.RadioButtonFor(model => model.PrintingCategory, "PDF", new { id = "Pdf", @class = "form-control  input-sm", @checked = "true" })
                                                    </div>
                                                    <div class="col-md-2" style="width: 13%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>PDF</strong></label>
                                                    </div>
                                                    <div class="col-md-1" style="width: 7%!important;">
                                                        @Html.RadioButtonFor(model => model.PrintingCategory, "BARCODES", new { id = "Bar", @class = "form-control  input-sm" })
                                                    </div>
                                                    <div class="col-md-2" style="width: 13%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>BARCODE</strong></label>
                                                    </div>

                                                </div>
                                            </fieldset>
                                        </div>

                                        <div class="col-md-6">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">QC [From Date] Days</legend>
                                                <label for="QCFromDays" class="text-right control-label col-form-label"><strong>Enter Number of Days</strong></label>
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(Model => Model.QCFromDays, null, new { @class = "form-control input-sm", @autocomplete = "off" })
                                                    </div>

                                                </div>
                                            </fieldset>
                                        </div>
                                    </div>
                                    <div class="row m-top">
                                        <div class="col-md-6">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">Verification Label</legend>
                                                <label for="QtyVeriLbl" class="text-right control-label col-form-label"><strong>Select Printing Option for Verification</strong></label>
                                                <div class="row">
                                                    <div class="col-md-1" style="width: 7%!important;">
                                                        @Html.RadioButtonFor(model => model.PrintVerification, "BARCODES", new { id = "VrfBar", @class = "form-control  input-sm", @checked = "true" })
                                                    </div>
                                                    <div class="col-md-2" style="width: 13%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>BARCODE</strong></label>
                                                    </div>
                                                    <div class="col-md-1" style="width: 7%!important;">
                                                        @Html.RadioButtonFor(model => model.PrintVerification, "PDF", new { id = "VrfPdf", @class = "form-control  input-sm" })
                                                    </div>
                                                    <div class="col-md-2" style="width: 13%!important;">
                                                        <label for="fname" class="text-right control-label col-form-label" style="font-size:12px;"><strong>PDF</strong></label>
                                                    </div>

                                                </div>
                                            </fieldset>
                                        </div>


                                    </div>
                                    <div class="row m-top">
                                        <div class="col-md-1" style="padding-top: 15px;">
                                            <button class="btn btn-success btn-sm" type="button" id="Add"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save</strong></button>
                                        </div>
                                        <div class="col-md-1" style="padding-top: 15px;">
                                            <button class="btn btn-default btn-sm" type="button" id="Clear"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>Clear</strong></button>
                                        </div>
                                    </div>

                                    <div id="Grid"></div>
                                </div>
                                <div id="Menu2" class="tab-pane fade ">
                                    <div class="row m-top">
                                        <div class="col-md-12">
                                            <fieldset class="the-fieldset bg-info">
                                                <legend class="le">SMTP</legend>
                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>SMTP SERVER</strong></label>
                                                        @Html.TextBoxFor(Model => Model.SMTPServer, null, new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="col-md-1" style="width: 31% !important; margin: 23px 0 0 0;">
                                                            @Html.CheckBoxFor(model => model.ChkSSL, new { @class = "form-control  input-sm" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            <label for="Quality" class="text-right control-label col-form-label" style="font-size: 15px; margin: 24px 0 0 -15px;"><strong>ENABLE SSL</strong></label>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>EMAIL ID</strong></label>
                                                        @Html.TextBoxFor(Model => Model.SMTPEMAILID, null, new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="col-md-3" style="margin: 20px 0 0 0;">
                                                        <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>PASSWORD</strong></label>
                                                        @Html.PasswordFor(Model => Model.SMTPPSWORD)
                                                        <strong>@Html.ValidationMessageFor(model => model.SMTPPSWORD, "", new { @class = "text-danger", placeholder = "Password", autocomplete = "off" })</strong>

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>PRIORITY</strong></label>
                                                        @Html.DropDownList("PRIORITY", new List<SelectListItem>
                                                           {
                                                               new SelectListItem{ Text = "NORMAL",Value="NORMAL" },
                                                               new SelectListItem{ Text = "HIGH",Value="HIGH" },
                                                               new SelectListItem{ Text = "LOW",Value="LOW"}
                                                           })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>SMTP</strong></label>
                                                        @Html.TextBoxFor(Model => Model.SMTPPORT, null, new { @class = "form-control input-sm" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        <div class="col-md-1" style="padding-top: 25px;">
                                                            <button class="btn btn-success btn-sm" type="button" id="SMTPAdd"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save SMTP</strong></button>
                                                        </div>
                                                        <div class="col-md-3" style="padding-top: 25px; margin: 0 0 0 105px;">
                                                            <button class="btn btn-default btn-sm" type="button" id="SMTPTEST"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>TEST SMTP</strong></button>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>EMAIL To</strong></label>
                                                        @Html.TextBoxFor(Model => Model.EmailTo, null, new { @class = "form-control input-sm" })
                                                    </div>
                                                </div>

                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                                <div id="Menu3" class="tab-pane fade ">
                                    <div class="row">
                                        <div class="col-md-1" style="width: 3%!important;">
                                            @Html.CheckBoxFor(model => model.ChkPRINT_SERIAL_NUMBER, new { @class = "form-control  input-sm" })
                                        </div>
                                        <div class="col-md-2">
                                            <label for="Quality" class="text-right control-label col-form-label" style="font-size: 12px; margin: 3px 0 0 -15px;"><strong>PRINT_SERIAL_NUMBER</strong></label>
                                        </div>
                                        <div class="col-md-1" style="width: 3%!important;">
                                            @Html.CheckBoxFor(model => model.ChkSUB_ASSEMBLY_SERIAL_NUMBER, new { @class = "form-control  input-sm" })
                                        </div>
                                        <div class="col-md-2">
                                            <label for="Quality" class="text-right control-label col-form-label" style="font-size: 12px; margin: 3px 0 0 -15px;">
                                                <strong>SUB_ASSEMBLY_SERIAL_NUMBER</strong>
                                            </label>
                                        </div>
                                        <div class="col-md-1" style="width: 3%!important;">
                                            @Html.CheckBoxFor(model => model.ChkFAMILY_SERIAL, new { @class = "form-control  input-sm" })
                                        </div>
                                        <div class="col-md-2">
                                            <label for="Quality" class="text-right control-label col-form-label" style="font-size: 12px; margin: 3px 0 0 -15px;">
                                                <strong>FAMILY_SERIAL</strong>
                                            </label>
                                        </div>
                                        <div class="col-md-1" style="width: 3%!important;">
                                            @Html.CheckBoxFor(model => model.ChkSwitch_Of_Tyre_Make, new { @class = "form-control  input-sm" })
                                        </div>
                                        <div class="col-md-2">
                                            <label for="Quality" class="text-right control-label col-form-label" style="font-size: 12px; margin: 3px 0 0 -15px;">
                                                <strong>Switch_Of_Tyre_Make</strong>
                                            </label>
                                        </div>
                                        <div class="col-md-1">
                                            <button class="btn btn-success btn-sm" type="button" id="InteTblAdd"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save</strong></button>

                                        </div>
                                    </div>
                                </div>
                                <div id="Menu4" class="tab-pane fade ">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label for="SuccessIntvl" class="text-right control-label col-form-label"><strong>STAGE</strong></label>
                                            <div>
                                                @Html.DropDownList("STAGE", new List<SelectListItem>
                                                    {
                                                        new SelectListItem{ Text = "TRACTOR_BOM",Value="TRACTOR_BOM"},
                                                        new SelectListItem{ Text = "OIL_ALERT 1",Value="OIL_ALERT1"},
                                                        new SelectListItem{ Text = "OIL_ALERT 2",Value="OIL_ALERT2"},
                                                        new SelectListItem{ Text = "OIL_ALERT 3",Value="OIL_ALERT3"},
                                                        new SelectListItem{ Text = "OIL_ALERT 4",Value="OIL_ALERT4"},
                                                        new SelectListItem{ Text = "OIL_ALERT 5",Value="OIL_ALERT5"},
                                                        new SelectListItem{ Text = "OIL_ALERT 6",Value="OIL_ALERT6"},
                                                        new SelectListItem{ Text = "OIL_ALERT 7",Value="OIL_ALERT7"},
                                                        new SelectListItem{ Text = "OIL_ALERT 8",Value="OIL_ALERT8"}
                                                    })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>RECV NAME</strong></label>
                                            @Html.TextBoxFor(Model => Model.NOTIFYUSERNAME, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-3">

                                            <label for="ErrorIntvl" class="text-right control-label col-form-label">
                                                <strong>EMAIL ID</strong>
                                            </label>
                                            @Html.CheckBoxFor(model => model.EMAILIDChk, new { @class = "form-control  input-sm", @style = "width: 4%!important;margin: -25px 0 -4px 90px;" })

                                            @Html.TextBoxFor(Model => Model.NOTIFYEMAILID, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-2">

                                            <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>MOBILE</strong></label>
                                            @Html.CheckBoxFor(model => model.MOBILEChk, new { @class = "form-control  input-sm", @style = "width: 6%!important;margin: -25px 0 -4px 90px;" })

                                            @Html.TextBoxFor(Model => Model.NOTIFYMOBILE, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-1">
                                            <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>Shot Time</strong></label>
                                            @Html.TextBoxFor(Model => Model.NOTIFYMAILTIMING, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-3">
                                            <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>Message</strong></label>
                                            @Html.TextBoxFor(Model => Model.NOTIFYMessage, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-2">
                                            <label for="ErrorIntvl" class="text-right control-label col-form-label"><strong>Template ID</strong></label>
                                            @Html.TextBoxFor(Model => Model.NOTIFYTemplateID, null, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-1" style="margin: 25px 0 0 0;">
                                            <button class="btn btn-success btn-sm" type="button" id="NotifyAdd"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>Save</strong></button>

                                        </div>
                                    </div>
                                    <div id="GridEmails"></div>
                                </div>
                            </div>

                        </fieldset>
                    </div>
                </div>
            </div>

        }
    </div>
</div>

<script src="@Url.Content("~/assets/js/jquery-2.1.4.min.js")"></script>
<script src="@Url.Content("~/Scripts/ej2/ej2.min.js")"></script>
<link href="@Url.Content("~/Content/select2/dist/css/select2.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/select2/dist/js/select2.min.js")"></script>
<style type="text/css">
    @@media (min-width: 992px){
.col-md-4 {
    width: 20.333%;
}
    }
</style>

<script>


    $(document).ready(function () {

        BindTimeInterval();
        DDLPlant();
        BindSMTP();
        BindEmailGrid();
        GetIntegratetable();

    });


    $("#Plant").on("change", function () {
        DDLFamilyByPlant();

    });
    $("#Family").on("change", function () {
        BindExistingRecord();
        /*BindGrid();*/
    });

    $("#Clear").on("click", function () {
        location.reload(true);
    });

    function BindTimeInterval() {

        $.ajax({
            url: '@Url.Action("BindTimeInterval", "Setting")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#SuccessIntvl").html(null);
                $("#ErrorIntvl").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#SuccessIntvl").append(optionhtml);
                    $("#ErrorIntvl").append(optionhtml);
                });

        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    }

    //Function to bind Plant
    function DDLPlant() {
        $.ajax({
            url: '@Url.Action("BindPlant", "Setting")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#Plant").append(optionhtml);
                });


                DDLFamilyByPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    //Function to bind Family by Plant
    function DDLFamilyByPlant() {
        var selectedValue = $("#Plant").val();
        $.ajax({
            url: '@Url.Action("BindFamily", "Setting")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify({ Plant: selectedValue }),
            success: function (result) {
                $("#Family").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#Family").append(optionhtml);

                });
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    function BindExistingRecord() {
        $("#divLoader").show();
        var modlType,Verifitype;
        if ($("#Pdf").is(":checked")) {
            modlType = $("#Pdf").val();
        }
        else if ($("#Bar").is(":checked")) {
            modlType = $("#Bar").val();
        }

        if ($("#VrfPdf").is(":checked")) {
            Verifitype = $("#VrfPdf").val();
        }
        else if ($("#VrfBar").is(":checked")) {
            Verifitype = $("#VrfBar").val();
        }

        if ($("#A4Sheet").prop('checked') == true) {
            A4Sheet = true;
        }
        else {
            A4Sheet = false;
        }
        if ($("#Barcode").prop('checked') == true) {
            Barcode = true;
        }
        else {
            Barcode = false;
        }
        if ($("#Quality").prop('checked') == true) {
            Quality = true;
        }
        else {
            Quality = false;
        }
        var Data = {
            Plant: $('#Plant').val(),
            Family: $('#Family').val(),
            A4Sheet: A4Sheet,
            Barcode: Barcode,
            Quality: Quality,
            PrintingCategory: modlType,
            PrintVerification: Verifitype

                };
        $.ajax({
            url: '@Url.Action("ExistingRecord", "Setting")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (data) {
                $("#divLoader").hide();

                if (data.Result.SuccessIntvl !== null) {
                    $("#SuccessIntvl").val(data.Result.SuccessIntvl);
                }
                else {
                    $("#SuccessIntvl").val("SELECT");
                }
                if (data.Result.ErrorIntvl !== null) {
                    $("#ErrorIntvl").val(data.Result.ErrorIntvl);
                }
                else {
                    $("#ErrorIntvl").val("SELECT");
                }
                //console.log(data.Result.A4Sheet);
                $("#A4Sheet").prop('checked', data.Result.A4Sheet);
                $("#Barcode").prop('checked', data.Result.Barcode);
                $("#Quality").prop('checked', data.Result.Quality);

               // $('[name="PrintingCategory"]').removeAttr('checked');
                if (data.Result.PrintingCategory !== "" && data.Result.PrintingCategory != null) {
                    if ("PDF" == data.Result.PrintingCategory) {
                        $('#Pdf').prop('checked', true);
                    }
                    else if ("BARCODES" == data.Result.PrintingCategory) {
                        $('#Bar').prop('checked', true);

                    }
                }
                if (data.Result.PrintVerification !== "" && data.Result.PrintVerification != null) {
                    if ("PDF" == data.Result.PrintVerification) {
                        $('#VrfPdf').prop('checked', true);
                    }
                    else if ("BARCODES" == data.Result.PrintVerification) {
                        $('#VrfBar').prop('checked', true);

                    }
                }
                if (data.Result.QCFromDays !== null) {
                    $("#QCFromDays").val(data.Result.QCFromDays);
                }
                else {
                    $('#QCFromDays').val(null);
                }
                BindGrid();
            },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    //Function to bind Grid
    function BindGrid() {
        $("#divLoader").show();
        var Data = {
            Plant: $('#Plant').val(),
            Family: $('#Family').val()

                };
        $.ajax({
            url: '@Url.Action("Grid", "Setting")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {

                $("#Grid").html(result);
                $("#divLoader").hide();
            },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    //Insert function
    $("#Add").on("click", function () {
        $("#divLoader").show();
        if ($("#ChkSSL").prop('checked') == true) {
            ChkSSL = true;
        }
        else {
            A4Sheet = false;
        }
        if ($("#Barcode").prop('checked') == true) {
            Barcode = true;
        }
        else {
            Barcode = false;
        }
        if ($("#Quality").prop('checked') == true) {
            Quality = true;
        }
        else {
            Quality = false;
        }
            var Data = {
                Plant: $('#Plant').val(),
                Family: $('#Family').val(),
                SuccessIntvl: $('#SuccessIntvl').val(),
                ErrorIntvl: $('#ErrorIntvl').val(),
                QCFromDays: $('#QCFromDays').val(),
                A4Sheet: A4Sheet,
                Barcode: Barcode,
                Quality: Quality,
                PrintingCategory: $("input[name='PrintingCategory']:checked").val(),
                PrintVerification: $("input[name='PrintVerification']:checked").val()
            };
            $.ajax({
                url: '@Url.Action("Add", "Setting")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);

                        BindGrid();
                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
    });

    function closeAlert(alert) {

      $(alert).hide();
    };


     //Onclick SMTP SAVE
     $("#SMTPAdd").on("click", function () {
         $("#divLoader").show();
         var ChkSSL = false;
         if ($("#ChkSSL").prop('checked') == true) {
             ChkSSL = true;
         }
         else {
             ChkSSL = false;
         }
         if ($('#SMTPEMAILID').val() == "") {
             $('#alert').append('<div class="alert alert-danger role = "alert"><strong>Please Enter EMAIL ID</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

             setTimeout(function () {
                 $.each($('.alert'), function () {
                     closeAlert(this);
                 });
             }, 5000);
         }
            var Data = {
                SMTPServer: $('#SMTPServer').val(),
                SMTPPSWORD: $('#SMTPPSWORD').val(),
                PRIORITY: $('#PRIORITY').val(),
                SMTPPORT: $('#SMTPPORT').val(),
                ChkSSL: ChkSSL,
                SMTPEMAILID: $('#SMTPEMAILID').val()
         };
         if (Data != null) {
            $.ajax({
                url: '@Url.Action("AddSMTP", "Setting")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);

                        BindSMTP(data);
                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
         }
     });
    function BindSMTP(data) {
        if (data != undefined && data != null) {
            $("#SMTPServer").val(data[0].SMTPServer);
            if (data[0].ChkSSL == true) {
                $("#ChkSSL").prop('checked') = true
                $("#ChkSSL").is(":checked");
            } else {
                $("#ChkSSL").is(":unchecked");
            }
            $("#SMTPEMAILID").val(data[0].SMTPEMAILID);
            $("#SMTPPSWORD").val(data[0].SMTPPSWORD);
            $("#PRIORITY").val(data[0].PRIORITY).attr("change");
            $("#SMTPPORT").val(data[0].SMTPPORT);
        }
        else
        {
        $.ajax({
            url: '@Url.Action("BindSMTPData", "Setting")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {

                $("#SMTPServer").val(result[0].SMTPServer);
                if (result[0].ChkSSL == true) {
                    $("#ChkSSL").attr('checked');
                } else {
                    $("#ChkSSL").is(":unchecked");
                }
                $("#SMTPEMAILID").val(result[0].SMTPEMAILID);
                $("#SMTPPSWORD").val(result[0].SMTPPSWORD);
                $("#PRIORITY").val(result[0].PRIORITY).attr("change");
                $("#SMTPPORT").val(result[0].SMTPPORT);
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
        }
    }
       $("#SMTPTEST").on("click", function () {
         $("#divLoader").show();
         var ChkSSL = false;
         if ($("#ChkSSL").prop('checked') == true) {
             ChkSSL = true;
        }
        else {
             ChkSSL = false;
        }
            var Data = {
                SMTPServer: $('#SMTPServer').val(),
                SMTPEMAILID: $('#EmailTo').val(),
                EmailTo: $('#EmailTo').val(),
                SMTPPSWORD: $('#SMTPPSWORD').val(),
                PRIORITY: $('#PRIORITY').val(),
                SMTPPORT: $('#SMTPPORT').val(),
                ChkSSL: ChkSSL
            };
            $.ajax({
                url: '@Url.Action("TESTSMTP", "Setting")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);

                        BindSMTP(data);
                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
       });

       $("#NotifyAdd").on("click", function () {
            var Data = {
                STAGE: $('#STAGE').val(),
                NOTIFYMOBILE: $('#NOTIFYMOBILE').val(),
                NOTIFYUSERNAME: $('#NOTIFYUSERNAME').val(),
                NOTIFYMAILTIMING: $('#NOTIFYMAILTIMING').val(),
                EMAILIDChk: $('#EMAILIDChk').prop("checked"),
                MOBILEChk: $('#MOBILEChk').prop("checked"),
                NOTIFYEMAILID: $('#NOTIFYEMAILID').val()
           };
           if (Data.EMAILIDChk == false && Data.MOBILEChk == false) {
               $('#alert').append('<div class="alert" role = "alert"><strong>Please Check atleast One CheckBox</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
               /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
               setTimeout(function () {
                   $.each($('.alert'), function () {
                       closeAlert(this);
                   });
               }, 5000);
               return;
           }
            $.ajax({
                url: '@Url.Action("SaveEmail", "Setting")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);

                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
       });
    $("#InteTblAdd").on("click", function () {
        var PRINT_SERIAL_NUMBER = false;
        var SUB_ASSEMBLY_SERIAL_NUMBER = false;
        var FAMILY_SERIAL = false;
        var Switch_Of_Tyre_Make = false;
        if ($("#ChkPRINT_SERIAL_NUMBER").prop('checked') == true) {
            PRINT_SERIAL_NUMBER = true;
        }
        else {
            PRINT_SERIAL_NUMBER = false;
        }
        if ($("#ChkSUB_ASSEMBLY_SERIAL_NUMBER").prop('checked') == true) {
            SUB_ASSEMBLY_SERIAL_NUMBER = true;
        }
        else {
            SUB_ASSEMBLY_SERIAL_NUMBER = false;
        }
        if ($("#ChkFAMILY_SERIAL").prop('checked') == true) {
            FAMILY_SERIAL = true;
        }
        else {
            FAMILY_SERIAL = false;
        }
        if ($("#ChkSwitch_Of_Tyre_Make").prop('checked') == true) {
            Switch_Of_Tyre_Make = true;
        }
        else {
            Switch_Of_Tyre_Make = false;
        }
            var Data = {
                 ChkPRINT_SERIAL_NUMBER : PRINT_SERIAL_NUMBER,
                ChkSUB_ASSEMBLY_SERIAL_NUMBER : SUB_ASSEMBLY_SERIAL_NUMBER,
                ChkFAMILY_SERIAL : FAMILY_SERIAL,
                ChkSwitch_Of_Tyre_Make : Switch_Of_Tyre_Make
            };
            $.ajax({
                url: '@Url.Action("SaveIntegratetable", "Setting")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);

                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
       });

    $("#STAGE").on("change", function () {
        BindEmailGrid();
        /*BindGrid();*/
    });
     //Function to bind EmailGrid
    function BindEmailGrid() {
        $("#divLoader").show();
        var Data = {
            STAGE: $('#STAGE').val()

                };
        $.ajax({
            url: '@Url.Action("GridEmails", "Setting")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {

                $("#GridEmails").html(result);
                $("#divLoader").hide();
            },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };
    $("#Plant").select2({
        allowClear: true,
        width: '185px',
    });
    $("#Family").select2({
        allowClear: true,
        width: '100%',
    });
    $("#STAGE").select2({
        allowClear: true,
        width: '100%',
    });
    $("#PRIORITY").select2({
        allowClear: true,
        width: '100%',
    });
    //$("#SuccessIntvl,#ErrorIntvl").select2({
    //    allowClear: true,
    //    width: '100%',
    //});


    function GetIntegratetable() {
        $.ajax({
            url: '@Url.Action("Integratetable", "Setting")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $("#ChkPRINT_SERIAL_NUMBER").is(":unchecked");
                $("#ChkSUB_ASSEMBLY_SERIAL_NUMBER").is(":unchecked");
                $("#ChkFAMILY_SERIAL").is(":unchecked");
                $("#ChkSwitch_Of_Tyre_Make").is(":unchecked");
                if (result[0].ChkPRINT_SERIAL_NUMBER == true) {
                    $("#ChkPRINT_SERIAL_NUMBER").attr('checked');
                }
                if (result[0].ChkSUB_ASSEMBLY_SERIAL_NUMBER == true) {
                    $("#ChkSUB_ASSEMBLY_SERIAL_NUMBER").attr('checked');
                }
                if (result[0].ChkSwitch_Of_Tyre_Make == true) {
                    $("#ChkSwitch_Of_Tyre_Make").attr('checked');
                }
                if (result[0].ChkSwitch_Of_Tyre_Make == true) {
                    $("#ChkSwitch_Of_Tyre_Make").attr('checked');
                } 
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
        
    }
</script>