
@model MVCApp.Models.BulkStorage
<style>
    #divLoader {
        position: fixed;
        top: 0px;
        right: 0px;
        width: 100%;
        height: 100%;
        background-color: #fff;
        background-image: @Url.Content("~/Image/Loader.gif");
        background-repeat: no-repeat;
        background-position: center;
        z-index: 10000000;
        opacity: 0.4;
        filter: alpha(opacity=40); /* For IE8 and earlier */
    }
    .ui-autocomplete {
        max-height: 400px;
        overflow-y: auto;
        overflow-x: hidden;
    }


     .ui-autocomplete {
        height: 400px;
    }
</style>
<div id="divLoader" style="display:none;">
    <img src="@Url.Content("~/Image/Loader.gif")" alt="Loader" style="margin-top:10%; margin-left:38%" />
</div>
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Index", "Home")">Home</a>
        </li>
        <li>
            <a href="#">Bulk Storage Location</a>
        </li>
    </ul>
</div>
<div class="page-content">
    <div class="container" style="width:100%!important">
        <div id="alert"></div>
    </div>
    @*--------Form------------*@
    <div class="container" style="width:100%!important">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal form-group">
                <fieldset class="the-fieldset bg-info">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="Plant" class="text-right control-label col-form-label"><strong>PLANT</strong></label>
                            @Html.DropDownListFor(model => model.Plant, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Plant, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Family" class="text-right control-label col-form-label"><strong>FAMILY</strong></label>
                            @Html.DropDownListFor(model => model.Family, Enumerable.Empty<SelectListItem>(), new { @class = "form-control  input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <div class="col-md-6">
                                <label for="TempLoc" class="text-right control-label col-form-label"><strong>IS TEMP LOC ?</strong></label>
                                <div class="form-check">
                                    @Html.CheckBoxFor(Model => Model.TempLoc, new { @class = "largerCheckbox" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label for="TempLoc" class="text-right control-label col-form-label"><strong>UNPACKED ?</strong></label>
                                <div class="form-check">
                                    @Html.CheckBoxFor(Model => Model.chkUnpck, new { @class = "largerCheckbox" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label for="Location" class="text-right control-label col-form-label"><strong>LOCATION</strong></label>
                            @Html.TextBoxFor(model => model.Location, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3" id="Item1">
                            <label for="Item" class="text-right control-label col-form-label"><strong>ITEM CODE</strong></label>
                            @Html.TextBoxFor(Model => Model.Item, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })</strong>
                        </div>

                        <div class="col-md-3">
                            <label for="Capacity" class="text-right control-label col-form-label"><strong>No. Of Bin</strong></label>
                            @Html.TextBoxFor(Model => Model.NoofBin, null, new { @class = "form-control input-sm", @autocomplete = "off", Type = "number", @onblur = "capacityCal()" })
                            <strong>@Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="SftStkQuantity" class="text-right control-label col-form-label"><strong>SAFTY STOCK QUANTITY</strong></label>
                            @Html.TextBoxFor(Model => Model.SftStkQuantity, null, new { @class = "form-control input-sm", @autocomplete = "off", Type = "number" })
                            <strong>@Html.ValidationMessageFor(model => model.SftStkQuantity, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="NoOfLocAllocated" class="text-right control-label col-form-label"><strong>NO. OF LOCATIONS ALLOCATED</strong></label>
                            @Html.TextBoxFor(Model => Model.NoOfLocAllocated, null, new { @class = "form-control input-sm", @autocomplete = "off", Type = "number", @onblur = "capacityCal()" })
                            <strong>@Html.ValidationMessageFor(model => model.NoOfLocAllocated, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="PackingType" class="text-right control-label col-form-label"><strong>PACKING TYPE</strong></label>
                            @Html.TextBoxFor(Model => Model.PackingType, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.PackingType, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="VerticalStkLevel" class="text-right control-label col-form-label"><strong>VERTICAL STACKING LEVEL</strong></label>
                            @Html.TextBoxFor(Model => Model.VerticalStkLevel, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.VerticalStkLevel, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="BulkStoreSNP" class="text-right control-label col-form-label"><strong>BULK STORE SNP</strong></label>
                            @Html.TextBoxFor(Model => Model.BulkStoreSNP, null, new { @class = "form-control input-sm", @onblur = "capacityCal()" })
                            <strong>@Html.ValidationMessageFor(model => model.BulkStoreSNP, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Capacity" class="text-right control-label col-form-label"><strong>CAPACITY</strong></label>
                            @Html.TextBoxFor(Model => Model.Capacity, null, new { @class = "form-control input-sm", @autocomplete = "off", Type = "number" })
                            <strong>@Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="UsagePerTractor" class="text-right control-label col-form-label"><strong>USAGE PER TRACTOR</strong></label>
                            @Html.TextBoxFor(Model => Model.UsagePerTractor, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.UsagePerTractor, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="Revision" class="text-right control-label col-form-label"><strong>REVISION</strong></label>
                            @Html.TextBoxFor(Model => Model.Revision, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.Revision, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-3">
                            <label for="MaxInventory" class="text-right control-label col-form-label"><strong>MAXIMUM INVENTORY</strong></label>
                            @Html.TextBoxFor(Model => Model.MaxInventory, null, new { @class = "form-control input-sm" })
                            <strong>@Html.ValidationMessageFor(model => model.MaxInventory, "", new { @class = "text-danger" })</strong>
                        </div>
                        <div class="col-md-1" style="padding-top: 23px;">
                            <button class="btn btn-success btn-sm" type="button" id="Add"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>SAVE</strong></button>
                            <button class="btn btn-success btn-sm" type="button" id="Update"><i class="ace-icon fa fa-plus-square bigger-110"></i><strong>UPDATE</strong></button>
                        </div>

                        <div class="col-md-1" style="padding-top: 23px;">
                            <button class="btn btn-default btn-sm" type="button" id="Clear"><i class="ace-icon fa fa-eraser bigger-110"></i><strong>CLEAR</strong></button>
                        </div>
                    </div>

                </fieldset>
            </div>

        }
        <div id="Grid"></div>
    </div>
</div>

<script src="@Url.Content("~/assets/js/jquery-2.1.4.min.js")"></script>
<script src="@Url.Content("~/Scripts/ej2/ej2.min.js")"></script>
<link href="@Url.Content("~/Content/select2/dist/css/select2.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/select2/dist/js/select2.min.js")"></script>
<script src="@Url.Content("~/Scripts/AutoFill/jquery-ui.min.js")"></script>
<link href="@Url.Content("~/Scripts/AutoFill/jquery-ui.min.css")" rel="stylesheet" />

<script>
    //var isDivShow = true;

    $(document).ready(function () {
        $("#Update").hide();
        DDLPlant();

        AutoComplete();
      
    });
        function capacityCal() {
            var NoofBin = $('#NoofBin').val();
            var BulkStoreSNP = $('#BulkStoreSNP').val();
            var NoOfLocAllocated = $('#NoOfLocAllocated').val();
            if (NoofBin == "") {
                NoofBin = 1;
            }
            if (BulkStoreSNP == "") {
                BulkStoreSNP = 1;
            }
            if (NoOfLocAllocated == "") {
                NoOfLocAllocated = 1;
            }
            var Capacity = NoofBin * BulkStoreSNP * NoOfLocAllocated;
            if (Capacity == "" && Capacity == null) {
                Capacity = 0;
            }
            $('#Capacity').val(Capacity);
        };
    function AutoComplete() {
        $.noConflict();

        $("#Item").autocomplete({
            source: function (request, response) {

            var Data = {
                Plant: $('#Plant').val(),
                Family: $('#Family').val(),
                Item: $('#Item').val()
            };
                $.ajax({
                    url: "@Url.Action("BindItemCode", "BulkStorage")",
                    type: "POST",
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify({ data: Data }),
                    success: function (data) {
                        console.log(data.Text);
                        response($.map(data, function (item) {

                            return { label: item.Text, value: item.Text };
                        }))

                    },
                    error: function (err) {
                        alert(err);
                    }
                });
            },

            minLength: 4

          });
    }

    $("#Plant").on("change", function () {
        DDLFamilyByPlant();

    });
    $("#Family").on("change", function () {
        BindGrid();
    });

    $("#Clear").on("click", function () {
        location.reload(true);
    });


    //Insert function
    $("#Add").on("click", function () {
        var itemCode = "";
        $("#divLoader").show();
        if ($("#TempLoc").prop('checked') == true) {
            chkbox = true;
        }
        else {
            chkbox = false;
            itemCode = $('#Item').val();
        }
        if ($("#chkUnpck").prop('checked') == true) {
            chkUnpck = true;
        }
        else {
            chkUnpck = false;
        }
            var Data = {
                Plant: $('#Plant').val(),
                Family: $('#Family').val(),
                Item: itemCode,
                Location: $("#Location").val(),
                Capacity: $("#Capacity").val(),
                SftStkQuantity: $("#SftStkQuantity").val(),
                NoOfLocAllocated: $("#NoOfLocAllocated").val(),
                PackingType: $("#PackingType").val(),
                VerticalStkLevel: $("#VerticalStkLevel").val(),
                BulkStoreSNP: $("#BulkStoreSNP").val(),
                UsagePerTractor: $("#UsagePerTractor").val(),
                Revision: $("#Revision").val(),
                TempLoc: chkbox,
                chkUnpck: chkUnpck,
                MaxInventory: $("#MaxInventory").val()

            };
            $.ajax({
                url: '@Url.Action("Save", "BulkStorage")',
                data: JSON.stringify({ data: Data }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $("#divLoader").hide();
                    if (data.validation.includes("error")) {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        /*setTimeout(function () { $(".alert").alert('close'); }, 5000);*/
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                    }

                    else {
                        $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                        setTimeout(function () {
                            $.each($('.alert'), function () {
                                closeAlert(this);
                            });
                        }, 5000);
                        $('#Item').val("");
                        if ($("#chkUnpck").prop('checked') == true) {
                            $("#chkUnpck").prop(false)
                        }
                        else {
                            $("#chkUnpck").prop(false)
                        }
                        $('#Location').val("");
                        $('#Capacity').val("");
                        $('#SftStkQuantity').val("");
                        $('#NoOfLocAllocated').val("");
                        $('#PackingType').val("");
                        $('#VerticalStkLevel').val("");
                        $('#BulkStoreSNP').val("");
                        $('#UsagePerTractor').val("");
                        $('#Revision').val("");
                        $("#MaxInventory").val("");
                        BindGrid();
                    }
                },
                error: function (errormessage) {
                    $("#divLoader").hide();
                    $('#alert').append('<div class="alert ' + errormessage.ID + '"role = "alert"><strong>' + errormessage.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);

                }
            });
    });

    function closeAlert(alert) {

        $(alert).hide();
    };

    $(function () {
        $("#TempLoc").click(function () {
            if ($(this).is(":checked")) {
                $("#Item1").hide();
                //isDivShow = false;
                //$("#AddPassport").hide();
            } else {
                $("#Item1").show();
               // isDivShow = true;
                //$("#AddPassport").show();
            }
        });
    });

    $("#Capacity").on('change', function () {
        $("#SftStkQuantity").val($(this).val());
    });
    
    //Function to bind Plant
    function DDLPlant() {
        $.ajax({
            url: '@Url.Action("BindPlant", "BulkStorage")',
            type: "GET",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';
                    $("#Plant").append(optionhtml);
                });
                DDLFamilyByPlant();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

    //Function to bind Family by Plant
    function DDLFamilyByPlant() {
        var selectedValue = $("#Plant").val();
        $.ajax({
            url: '@Url.Action("BindFamily", "BulkStorage")',
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            data: JSON.stringify({ Plant: selectedValue }),
            success: function (result) {
                $("#Family").html(null);
                $.each(result, function (i) {
                    var optionhtml = '<option value="' + result[i].Value + '">' + result[i].Text + '</option>';

                    $("#Family").append(optionhtml);
                });
                BindGrid();
        },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };


    //Function to bind Grid
    function BindGrid() {
        $("#divLoader").show();
        var Data = {
            Plant: $('#Plant').val(),
            Family: $('#Family').val()

                };
        $.ajax({
            url: '@Url.Action("Grid", "BulkStorage")',
            data: JSON.stringify(Data),
            type: "POST",
            contentType: "application/json;charset=UTF-8",
            success: function (result) {

                $("#Grid").html(result);
                $("#divLoader").hide();
            },
            error: function (errormessage) {
            //alert(errormessage.responseText);
            }
        });
    };

   //Delete Data
    function Delete() {
        var data = {

            AutoId: AutoId,
            Plant: Plant,
            Family: Family,
            Location: Location
            };
        $.ajax({
            url: '@Url.Action("Delete", "BulkStorage")',
            data: JSON.stringify(data),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#divLoader").hide();

                if (data.validation.includes("error")) {
                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);
                }


                else {
                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);
                    $('#Plant').prop('disabled', false);
                    $('#Family').prop('disabled', false);
                    $('#Item').prop('disabled', false);
                    $('#Location').val("");
                    $('#Capacity').val(""); 
                    $('#SftStkQuantity').val("");
                    $('#NoOfLocAllocated').val("");
                    $('#PackingType').val("");
                    $('#VerticalStkLevel').val("");
                    $('#BulkStoreSNP').val("");
                    $('#UsagePerTractor').val("");
                    $('#Revision').val("");
                    $("#MaxInventory").val("");
                    $('#Add').show();
                    $('#Update').hide();
                    BindGrid();

                }

            },
            error: function (errormessage)
            {
            }
        });

    }


    //Update Data
    $("#Update").on("click", function () {
        var itemCode = "";
        $("#divLoader").show();
        if ($("#TempLoc").prop('checked') == true) {
            chkbox = true;
        }
        else {
            chkbox = false;
            itemCode = $('#Item').val();
        }
        if ($("#chkUnpck").prop('checked') == true) {
            chkUnpck = true;
        }
        else {
            chkUnpck = false;
        }
        var data = {
            AutoId: AutoId,
            Plant: $('#Plant').val(),
            Family: $('#Family').val(),
            Item: itemCode,
            Location: $("#Location").val(),
            Capacity: $("#Capacity").val(), 
            SftStkQuantity: $("#SftStkQuantity").val(),
            NoOfLocAllocated: $("#NoOfLocAllocated").val(),
            PackingType: $("#PackingType").val(),
            VerticalStkLevel: $("#VerticalStkLevel").val(),
            BulkStoreSNP: $("#BulkStoreSNP").val(),
            UsagePerTractor: $("#UsagePerTractor").val(),
            Revision: $("#Revision").val(),
            TempLoc: chkbox,
            chkUnpck: chkUnpck,
            MaxInventory: $("#MaxInventory").val()
            };
        $.ajax({
            url: '@Url.Action("Update", "BulkStorage")',
            data: JSON.stringify(data),
            type: "POST",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (data) {
                $("#divLoader").hide();

                $("#divLoader").hide();
                if (data.validation.includes("error")) {
                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');

                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);
                }


                else {

                    $('#alert').append('<div class="alert ' + data.ID + '"role = "alert"><strong>' + data.Msg + '</strong><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>');
                    setTimeout(function () {
                        $.each($('.alert'), function () {
                            closeAlert(this);
                        });
                    }, 5000);
                    $('#Plant').prop('disabled', false);
                    $('#Family').prop('disabled', false);
                    $('#Item').val("");
                    $('#Location').val("");
                    $('#Capacity').val("");
                    $('#SftStkQuantity').val("");
                    $('#NoOfLocAllocated').val("");
                    $('#PackingType').val("");
                    $('#VerticalStkLevel').val("");
                    $('#BulkStoreSNP').val("");
                    $('#UsagePerTractor').val("");
                    $('#Revision').val("");
                    $("#MaxInventory").val("");
                    $('#Add').show();
                    $('#Update').hide();
                    BindGrid();
                }

            },
            error: function (errormessage)
            {
            }
        });
    });
   

    $("#Plant").select2({
        allowClear: true,
        width: '100%',
    });
    $("#Family").select2({
        allowClear: true,
        width: '100%',
    });


</script>