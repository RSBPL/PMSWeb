var divAvailableStock = "divAvailableStock", divProductionModelWise = "divProductionModelWise", divProductionPhaseWise = "divProductionPhaseWise", divDispatch = "divDispatch", divRejection = "divRejection", divStockInWareHouse = "divStockInWareHouse", divPendingDispatch = "divPendingDispatch", divChartPopupClickChart = "divChartPopupClickChart", ChartType = "Pie", Param = null, txt = null, durationType = null, ChartClicData = null, chartType = "Pie"; function chart_Available_Stock_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetAvilableStock", data: "{'unitcode':'" + $("input[id$=HiddenUnit]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawAvilableStock(n, t, e) }, error: function (t) { } }) } function DrawAvilableStock(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { click: t => { $(event.target)[0].textContent || (console.log("clicked"), this.drillDown()) }, redraw: function () { chart_Available_Stock_caller(divAvailableStock, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return txt = this.point.name, "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !0, format: "<b>{point.name}</b>: Quantity {point.y}" }, showInLegend: !1 }, series: { cursor: "pointer", point: { events: { click: function () { Param = "POPUPCATEGORY", ChartPopupData(txt, durationType = "NonDateWise"), ChartClickPopupPiChart_Caller(divChartPopupClickChart, ChartType) } } } } }, series: [{ name: "Availabile Stock", data: t }], navigation: { buttonOptions: { enabled: !0 } } }) } function chart_Production_Model_Wise_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetProduction", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','shiftcode':'" + $("select[id*=drpShifts]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawProductionModelWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawProductionModelWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Production_Model_Wise_caller(divProductionModelWise, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return txt = this.point.name, "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !0, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !1 }, series: { cursor: "pointer", point: { events: { click: function () { Param = "POPUPCATEGORY_DATERANGE", ChartPopupData(txt, durationType = "DateWise"), ChartClickPopupPiChart_Caller(divChartPopupClickChart, ChartType) } } } } }, series: [{ name: "Production Model Wise", data: t }] }) } function chart_Production_Phase_Wise_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetProductionPeriodwise", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','shiftcode':'" + $("select[id*=drpShifts]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawProductionPhaseWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawProductionPhaseWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Production_Phase_Wise_caller(divProductionPhaseWise, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Production Phase Wise", data: t }] }) } function chart_Dispatch_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetDispatch", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','shiftcode':'" + $("select[id*=drpShifts]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawDispatchWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawDispatchWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Dispatch_caller(divDispatch, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Dispatch", data: t }] }) } function chart_Rejection_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetRejection", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawRejectionWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawRejectionWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Rejection_caller(divRejection, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Rejection", data: t }] }) } function chart_Stock_In_Warehouse_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetStockInWarehouse", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawStockInWarehouseWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawStockInWarehouseWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Stock_In_Warehouse_caller(divStockInWareHouse, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Stock In Warehouse", data: t }] }) } function chart_Pending_Dispatch_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetPendingDispatch", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } DrawPendingDispatchWise(n, t, e) }, error: function (t) { alert(t) } }) } function DrawPendingDispatchWise(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Pending_Dispatch_caller(divPendingDispatch, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Pending Dispatch", data: t }] }) } function chart_Production_Phase_Wise_on_change_caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetProductionPeriodwise", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','shiftcode':'" + $("select[id*=drpShifts]").val() + "'}", dataType: "json", success: function (a) { a = a.d; var n = []; for (var i in a) { var r = new Array(a[i].Model, a[i].Quantity); n.push(r) } if (DrawProductionPhaseWise_on_change(n, t, e), a.length > 0) { var o = 0; for (var i in a) o += a[i].Quantity; document.getElementById("ContentPlaceHolder1_p2").innerHTML = o } else document.getElementById("ContentPlaceHolder1_p2").innerHTML = "0" }, error: function (t) { alert(t) } }) } function DrawProductionPhaseWise_on_change(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase(), events: { redraw: function () { chart_Production_Phase_Wise_on_change_caller(divProductionPhaseWise, a) } } }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !1, format: "<b>{point.name}</b>: {point.y}" }, showInLegend: !0 } }, series: [{ name: "Production Phase Wise", data: t }] }) } function int_it() { chart_Available_Stock_caller(divAvailableStock, chartType), chart_Production_Model_Wise_caller(divProductionModelWise, chartType), chart_Production_Phase_Wise_caller(divProductionPhaseWise, chartType), chart_Dispatch_caller(divDispatch, chartType), chart_Rejection_caller(divRejection, chartType), chart_Stock_In_Warehouse_caller(divStockInWareHouse, chartType), chart_Pending_Dispatch_caller(divPendingDispatch, chartType) } function SearchSerialNo() { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/SrNoSearch", data: "{'SrNo':'" + $("input[id*=txtSrNo]").val() + "', 'Unit': '" + $("input[id$=HiddenUnit]").val() + "', 'DetailType': '" + $("input[name$=SelectDetailType]:checked").val() + "'}", dataType: "json", success: function (t) { var e = ""; $.each(t, function (t, a) { null != a.SearchSrNo ? ($("#SearchSrNo").show(), e += "<tr>", null == a.SearchSrNo.SrNo || "" == a.SearchSrNo.SrNo ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.SrNo + "</td>", null == a.SearchSrNo.ItemCode || "" == a.SearchSrNo.ItemCode ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.ItemCode + "</td>", null == a.SearchSrNo.ItemName || "" == a.SearchSrNo.ItemName ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.ItemName + "</td>", null == a.SearchSrNo.InwardDate || "" == a.SearchSrNo.InwardDate ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.InwardDate + "</td>", null == a.SearchSrNo.DispatchDate || "" == a.SearchSrNo.DispatchDate ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.DispatchDate + "</td>", null == a.SearchSrNo.InvoiceNumber || "" == a.SearchSrNo.InvoiceNumber ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.InvoiceNumber + "</td>", null == a.SearchSrNo.Customer || "" == a.SearchSrNo.Customer ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.Customer + "</td>", null == a.SearchSrNo.DispatchLocation || "" == a.SearchSrNo.DispatchLocation ? e += "<td>--NA--</td>" : e += "<td>" + a.SearchSrNo.DispatchLocation + "</td>", e += "</tr>") : $("#SearchSrNo").hide() }), $("#tbodySearchSrNO").html(e); var a = ""; $.each(t, function (t, e) { null != e.Table0 ? ($("#Table0").show(), a += "<tr>", null == e.Table0.STAGE || "" == e.Table0.STAGE ? a += "<td>--NA--</td>" : a += "<td>" + e.Table0.STAGE + "</td>", null == e.Table0.SERIALNO || "" == e.Table0.SERIALNO ? a += "<td>--NA--</td>" : a += "<td>" + e.Table0.SERIALNO + "</td>", null == e.Table0.DATE || "" == e.Table0.DATE ? a += "<td>--NA--</td>" : a += "<td>" + e.Table0.DATE + "</td>", null == e.Table0.TIME || "" == e.Table0.TIME ? a += "<td>--NA--</td>" : a += "<td>" + e.Table0.TIME + "</td>", null == e.Table0.CREATEDBY || "" == e.Table0.CREATEDBY ? a += "<td>--NA--</td>" : a += "<td>" + e.Table0.CREATEDBY + "</td>", a += "</tr>") : $("#Table0").hide() }), $("#T0").html(a); var n = ""; $.each(t, function (t, e) { $("#Table1").show(), null != e.Table1 ? (n += "<tr>", null == e.Table1.STAGE || "" == e.Table1.STAGE ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.STAGE + "</td>", null == e.Table1.SERIALNO || "" == e.Table1.SERIALNO ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.SERIALNO + "</td>", null == e.Table1.ITEMCODE || "" == e.Table1.ITEMCODE ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.ITEMCODE + "</td>", null == e.Table1.DATE || "" == e.Table1.DATE ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.DATE + "</td>", null == e.Table1.TIME || "" == e.Table1.TIME ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.TIME + "</td>", null == e.Table1.CREATEDBY || "" == e.Table1.CREATEDBY ? n += "<td>--NA--</td>" : n += "<td>" + e.Table1.CREATEDBY + "</td>", n += "</tr>") : $("#Table1").hide() }), $("#T1").html(n); var i = ""; $.each(t, function (t, e) { $("#Table2").show(), null != e.Table2 ? (i += "<tr>", null == e.Table2.STAGE || "" == e.Table2.STAGE ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.STAGE + "</td>", null == e.Table2.SERIALNO || "" == e.Table2.SERIALNO ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.SERIALNO + "</td>", null == e.Table2.DATE || "" == e.Table2.DATE ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.DATE + "</td>", null == e.Table2.TIME || "" == e.Table2.TIME ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.TIME + "</td>", null == e.Table2.CAPTURED_WEIGHT || "" == e.Table2.CAPTURED_WEIGHT ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.CAPTURED_WEIGHT + "</td>", null == e.Table2.CREATEDBY || "" == e.Table2.CREATEDBY ? i += "<td>--NA--</td>" : i += "<td>" + e.Table2.CREATEDBY + "</td>", i += "</tr>") : $("#Table2").hide() }), $("#T2").html(i); var r = ""; $.each(t, function (t, e) { null != e.Table3 ? ($("#Table3").show(), r += "<tr>", null == e.Table3.STAGE || "" == e.Table3.STAGE ? r += "<td>--NA--</td>" : r += "<td>" + e.Table3.STAGE + "</td>", null == e.Table3.SERIALNO || "" == e.Table3.SERIALNO ? r += "<td>--NA--</td>" : r += "<td>" + e.Table3.SERIALNO + "</td>", null == e.Table3.DATE || "" == e.Table3.DATE ? r += "<td>--NA--</td>" : r += "<td>" + e.Table3.DATE + "</td>", null == e.Table3.TIME || "" == e.Table3.TIME ? r += "<td>--NA--</td>" : r += "<td>" + e.Table3.TIME + "</td>", null == e.Table3.CREATEDBY || "" == e.Table3.CREATEDBY ? r += "<td>--NA--</td>" : r += "<td>" + e.Table3.CREATEDBY + "</td>", r += "</tr>") : $("#Table3").hide() }), $("#T3").html(r); var o = ""; $.each(t, function (t, e) { null != e.Table4 ? ($("#Table4").show(), o += "<tr>", null == e.Table4.STAGE || "" == e.Table4.STAGE ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.STAGE + "</td>", null == e.Table4.SERIAL_NO || "" == e.Table4.SERIAL_NO ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.SERIAL_NO + "</td>", null == e.Table4.MDN || "" == e.Table4.MDN ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.MDN + "</td>", null == e.Table4.CUSTOMER || "" == e.Table4.CUSTOMER ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.CUSTOMER + "</td>", null == e.Table4.INVOICENUMBER || "" == e.Table4.INVOICENUMBER ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.INVOICENUMBER + "</td>", null == e.Table4.INVOICE_DATE || "" == e.Table4.INVOICE_DATE ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.INVOICE_DATE + "</td>", null == e.Table4.DISPATCHED_ON || "" == e.Table4.DISPATCHED_ON ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.DISPATCHED_ON + "</td>", null == e.Table4.DISPATCHED_TIME || "" == e.Table4.DISPATCHED_TIME ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.DISPATCHED_TIME + "</td>", null == e.Table4.Reason || "" == e.Table4.Reason ? o += "<td>--NA--</td>" : o += "<td>" + e.Table4.Reason + "</td>", o += "</tr>") : $("#Table4").hide() }), $("#T4").html(o) }, error: function (t) { alert(t.responseText) } }) } function ChartPopupData(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetPopupCategory", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','itemCetory':'" + t + "','duration':'" + e + "'}", dataType: "json", success: function (e) { $("#thHeading").text(t + " : " + $("input[id*=txtfromdate]").val() + " : " + $("input[id*=txttodate]").val()), $("#divChartAvailableStock").modal("show"); var a = "", n = 0; a += "<tr>", $.each(e.d, function (t, e) { null == e.SrNo || "" == e.SrNo ? a += "<td>--NA--</td>" : a += "<td>" + e.SrNo + "</td>", null == e.ItemCode || "" == e.ItemCode ? a += "<td>--NA--</td>" : a += "<td>" + e.ItemCode + "</td>", null == e.ItemName || "" == e.ItemName ? a += "<td>--NA--</td>" : a += "<td>" + e.ItemName + "</td>", null == e.Quantity || "" == e.Quantity ? a += "<td>--NA--</td>" : (a += "<td>" + e.Quantity + "</td>", n += parseInt(e.Quantity)), null == e.MRP || "" == e.MRP ? a += "<td>--NA--</td>" : a += "<td>" + e.MRP + "</td>", a += "</tr>" }), a += '<tr"><td></td><td></td><td class="text-right"><strong><b>Total : </b></strong></td><td><strong><b>' + n + "</b></strong></td><td></td></tr>", $("#PopupChartStockTbody").html(a) }, error: function (t) { alert(t.responseText) } }) } function ChartClickPopupPiChart_Caller(t, e) { $.ajax({ type: "POST", contentType: "application/json; charset=utf-8", url: "DeshboardVer3.aspx/GetPopupCategoryChart", data: "{'startDate':'" + $("input[id*=txtfromdate]").val() + "','endDate':'" + $("input[id*=txttodate]").val() + "','unitcode':'" + $("input[id$=HiddenUnit]").val() + "','itemCetory':'" + txt + "','duration':'" + durationType + "'}", dataType: "json", success: function (a) { var n = null; $.each(a.d, function (t, e) { n++ }), n > 0 ? (ChartClicData = a.d, a = a.d) : a = ChartClicData, a = a; var i = []; for (var r in a) { var o = new Array(a[r].Model, a[r].Quantity); i.push(o) } ChartClickPopupPiChart(i, t, e) }, error: function (t) { alert(t.responseText) } }) } function ChartClickPopupPiChart(t, e, a) { new Highcharts.Chart({ chart: { renderTo: e, type: a.toLowerCase() }, title: { text: null }, legend: { enabled: !0, verticalAlign: "bottom", width: 300, itemWidth: 150, labelFormatter: function () { var t = this.name.split(/[\s]+/), e = []; for (var a in t) a > 0 && a % 2 == 0 && e.push("<br>"), e.push(t[a]); return e.join(" ") } }, tooltip: { formatter: function () { return txt = this.point.name, "<b>" + this.point.name + "</b>: " + this.point.y } }, credits: { enabled: !1 }, plotOptions: { pie: { allowPointSelect: !0, cursor: "pointer", dataLabels: { style: { width: "100px" }, enabled: !0, format: "<b>{point.name}</b>: Quantity {point.y}" }, showInLegend: !1 }, series: { cursor: "pointer", point: { events: { click: function () { } } } } }, series: [{ name: "Available Stock", data: t }] }) } function check() { document.getElementById("reloadCB").checked = !0, toggleAutoRefresh(document.getElementById("reloadCB")) } $(document).ready(function () { }), $("#SearchSrNo").hide(), $("#Table0").hide(), $("#Table1").hide(), $("#Table2").hide(), $("#Table3").hide(), $("#Table4").hide(), $("input[id*=txtSrNo]").val(""), $("#btnSearchSrNo").on("click", function () { SearchSerialNo() }), $("#SearchSrNoClose1, #SearchSrNoClose2").on("click", function () { $("#SearchSrNo").hide(), $("#Table0").hide(), $("#Table1").hide(), $("#Table2").hide(), $("#Table3").hide(), $("#Table4").hide(), $("input[id*=txtSrNo]").val("") }), $("#LinkButtonExportInsidePopup").on("click", function () { $("#tblPopupChartStock").table2excel({ exclude: ".noExl", name: "Worksheet Name", filename: "SomeFile" }) }); var prm = Sys.WebForms.PageRequestManager.getInstance(); function pageLoaded() { $("select[id*=drpShifts]").change(function () { $(this).val(); chart_Production_Phase_Wise_on_change_caller(divProductionPhaseWise, chartType) }), int_it(), $("#SearchSrNo").hide(), $("#Table0").hide(), $("#Table1").hide(), $("#Table2").hide(), $("#Table3").hide(), $("#Table4").hide(), $("input[id*=txtSrNo]").val(""), $("#btnSearchSrNo").on("click", function () { SearchSerialNo() }), $("#SearchSrNoClose1, #SearchSrNoClose2").on("click", function () { $("#SearchSrNo").hide(), $("#Table0").hide(), $("#Table1").hide(), $("#Table2").hide(), $("#Table3").hide(), $("#Table4").hide(), $("input[id*=txtSrNo]").val(""), $("select[id*=drpShifts]").attr("checked", !1) }), $("#LinkButtonExportInsidePopup").on("click", function () { $("#tblPopupChartStock").table2excel({ exclude: ".noExl", name: "Worksheet Name", filename: "SomeFile" }) }) } prm.add_pageLoaded(pageLoaded);